{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BasicResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"description": "Basic JSON response for Controllers"
			},
			"DateResponse": {
				"properties": {
					"date": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"date",
					"message"
				],
				"type": "object",
				"description": "Basic JSON response with the current date for Controllers"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "intensivebackendopenbootcamp",
		"version": "1.0.0",
		"description": "Intensive course of Open Bootcamp with Node and Express in TypeScript - Backend",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Victor Canas"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/hello": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicResponse"
								}
							}
						}
					}
				},
				"tags": [
					"HelloController"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/goodbye": {
			"get": {
				"operationId": "GetDateMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DateResponse"
								}
							}
						}
					}
				},
				"tags": [
					"GoodbyeController"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "All user o user found by iD",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to retreive the Users in the Collection \"Users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to retreive (optional)",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "message informing if deletion was correct",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to delete the Users in the Collection \"Users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to delete (optional)",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "message informing if creation was correct",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to create a new User in the Collection \"Users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "User object to create",
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to update a User in the Collection \"Users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to update",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "IUser obj to set the new values",
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/logout": {
			"post": {
				"operationId": "LogoutUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}